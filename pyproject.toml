[project]
name = "RepoAuditor"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Scientific Software Engineering Center at Georgia Tech", email = "sse-center@gatech.edu" },
]
requires-python = ">= 3.10"
dependencies = [
    "dbrownell-common>=0.14.6",
    "pluggy>=1.5.0",
    "requests>=2.32.3",
    "typer>=0.15.3",
]
dynamic = ["version"]
classifiers = [
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
]

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://github.com/gt-sse-center/RepoAuditor"
Documentation = "https://github.com/gt-sse-center/RepoAuditor"
Repository = "https://github.com/gt-sse-center/RepoAuditor"

[project.scripts]
RepoAuditor = "RepoAuditor:EntryPoint.app"
repo_auditor = "RepoAuditor:EntryPoint.app"

[project.entry-points.RepoAuditor]
GitHubPlugin = "RepoAuditor.Plugins.GitHubPlugin"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "autogitsemver>=0.8.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.8",
    "syrupy>=4.9.1",
]

[tool.hatch.version]
path = "src/RepoAuditor/__init__.py"

[tool.pytest.ini_options]
addopts = "--verbose -vv --capture=no --cov=RepoAuditor --cov-fail-under=95.0"
python_files = [
    "**/*Test.py",
]

[tool.ruff]
line-length = 110

[tool.ruff.lint]
exclude = ["tests/**"]

# Eventually, we want to enable all rulesets...
# select = ["ALL"]

# ...however, we current experience failures in the rulesets commented out below.
select = [
    "AIR",
    #"ERA", # 168
    "FAST",
    "YTT",
    # "ANN", # 41
    "ASYNC",
    "S",
    "BLE",
    # "FBT", # 44
    # "B", # 11
    "A",
    "COM",
    "C4",
    "CPY",
    "DTZ",
    "T10",
    "DJ",
    # "EM", # 9
    "EXE",
    "FIX",
    "FA",
    "INT",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "INP",
    # "PIE", # 2
    "T20",
    "PYI",
    # "PT", # 5
    "Q",
    # "RSE", # 1
    "RET",
    "SLF",
    # "SIM", # 4
    "SLOT",
    # "TID", # 9
    "TD",
    # "TC", # 2
    # "ARG", # 5
    "PTH",
    "FLY",
    "I",
    # "C90", # 3
    "NPY",
    "PD",
    "N",
    "PERF",
    "E",
    "W",
    "DOC",
    # "D", # 249
    "F",
    # "PGH", # 5
    # "PL", # 11
    # "UP", # 100
    # "FURB", # 1
    "RUF",
    # "TRY", # 16

]

ignore = [
    "ANN002", # Missing type annotation for `*args`
    "ANN003", # Missing type annotation for `**kwargs`
    "BLE001", # Do not catch blind exception: `Exception`
    "COM812", # Trailing comma missing
    "D202", # No blank lines allowed after function docstring
    "E501", # Line too long
    "I001", # Import block is un-sorted or un-formatted
    "N802", # Function name `xxx` should be lowercase
    "N999", # Invalid module name
    "S101", # Use of assert detected
    "UP032", # Use f-string instead of `format` call
]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 20
max-returns = 20
